// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: club.sql

package repository

import (
	"context"
)

const getAllClubs = `-- name: GetAllClubs :many
SELECT id, name, nationality, seed, created_at FROM clubs
`

func (q *Queries) GetAllClubs(ctx context.Context, db DBTX) ([]Club, error) {
	rows, err := db.Query(ctx, getAllClubs)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Club
	for rows.Next() {
		var i Club
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.Nationality,
			&i.Seed,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const insertClub = `-- name: InsertClub :one
INSERT INTO clubs (
  name,
  nationality,
  seed
) VALUES (
  $1, $2, $3
)
RETURNING id, name, nationality, seed, created_at
`

type InsertClubParams struct {
	Name        string
	Nationality string
	Seed        int32
}

func (q *Queries) InsertClub(ctx context.Context, db DBTX, arg InsertClubParams) (Club, error) {
	row := db.QueryRow(ctx, insertClub, arg.Name, arg.Nationality, arg.Seed)
	var i Club
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Nationality,
		&i.Seed,
		&i.CreatedAt,
	)
	return i, err
}
